my compiler principle homework

词法分析
=========
中国科学技术大学编译原理与技术课程——词法分析上机实验

实验目的：对循环语句和条件判断语句编写词法分析编译程序，只能通过一遍扫描完成。

实验要求：
(1)关键字：
for    if    then  else  while    do
所有关键字都是小写。
(2）运算符和分隔符：
  ：  =   +   -   *    /   <    >   <=   <>    >=    ;    (  )   #
(3)其他标识符（ID）和整型常数（NUM），通过以下正规式定义：
ID=letter(letter | digit)*
NUM=digit digit*
(4)空格由空白、制表符和换行符组成。空格一般用来分隔ID、NUM、运算符、分隔符和关键字，词法分析阶段通常被忽略。

依赖文件：
mapping，程序运行时需要从这里读入词法单元与记号的映射关系。

语法分析
=========
中国科学技术大学编译原理第二次上机—语法分析1

目的：熟练掌握自上而下的语法分析方法，并能用程序实现。

要求：
1. 使用的文法如下：
	E -> TE'
	E' -> +TE' | epsilon
    T -> FT'
    T -> *FT' | epsilon
    F -> (E) | id
2. 对于任意给定的输入串（词法记号流）进行语法分析，递归下降方法和非递归预测分析方法可以任选其一来实现。
3. 要有一定的错误处理功能。即对错误能提示，并且能在一定程度上忽略尽量少的记号来进行接下来的分析。可以参考书上介绍的同步记号集合来处理。
可能的出错情况：idid*id,  id**id,  （id+id， +id*+id ……
4. 输入串以#结尾，输出推导过程中使用到的产生式。例如：
   输入：id+id*id#
   输出：E -> TE'
        T -> FT'
		F -> id
		E' -> + TE ¢
		T -> FT'
         ……
如果输入串有错误，则在输出中要体现是跳过输入串的某些记号了，还是弹栈，弹出某个非终结符或者是终结符了，同时给出相应的出错提示信息。比如：
idid*id对应的出错信息是：“输入串跳过记号id，用户多输入了一个id”；
id**id对应的出错信息是：“弹栈，弹出非终结符F，用户少输入了一个id”
(id+id对应的出错信息是：“弹栈，弹出终结符 ) ，用户少输入了一个右括号（或者说，括号不匹配）”
